variables:
  PYTHONDONTWRITEBYTECODE: 1

image: python:3.9-slim

stages:
  - static
  - deploy

lint:
  stage: static
  before_script:
    - python -m pip install --disable-pip-version-check --quiet tox poetry
  script:
    - tox -e lint
    - LINT=$(tox -e lint)
    - echo $LINT
    - python -m pip install --disable-pip-version-check --quiet anybadge
    - anybadge -l Lint -v $(echo $LINT | grep -q "commands succeeded" && echo "Succeeded" || echo "Failed") -f lint.svg Succeeded=green Failed=red
  artifacts:
    paths:
      - lint.svg
    when: always
    expire_in: 4 weeks

public:
  stage: deploy
  image: python:3.9
  needs:
    - job: lint
      artifacts: false
  only:
    - master
  except:
    - public
  before_script:
    - apt-get install -y git
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    - echo "$github_priv_key" | tr -d '\r' | ssh-add -
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "$GITLAB_USER_NAME"
    - shopt -s dotglob # include dotfiles in mv
  script:
    - cd public_publish && python build_public.py
    - cd $CI_PROJECT_DIR
    - git init
    - git remote add origin https://oauth2:${CI_PUSH_TOKEN}@$CI_SERVER_HOST/$CI_PROJECT_PATH.git || git remote set-url origin https://oauth2:${CI_PUSH_TOKEN}@$CI_SERVER_HOST/$CI_PROJECT_PATH.git
    - git config user.email "$GITLAB_USER_EMAIL"
    - git config user.name "$GITLAB_USER_NAME"
    - git add . && git commit -m '[skip ci] public update'
    - export GIT_SSL_NO_VERIFY=1 && git push --force --follow-tags origin HEAD:public
    # list changes
    - cd ..; rm -rf pub; mkdir pub; cd pub && git init && git remote add origin git@github.com:Riverside-Healthcare/Tableau-Metadata-Exporter.git && git pull origin master
    - git rm -rf . ; git clean -fxd # remove pub files, except git
    - cd $CI_PROJECT_DIR && rm -rf .git
    - cd .. && cd pub && mv $CI_PROJECT_DIR/* .
    - git status

github:
  when: manual
  only:
    - public # public branch
  stage: deploy
  image: python:3.9
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - ssh-keyscan github.com >> ~/.ssh/known_hosts
    - echo "$github_priv_key" | tr -d '\r' | ssh-add -
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "$GITLAB_USER_NAME"
    - shopt -s dotglob # include dotfiles in mv
  script:
    - cd ..; rm -rf pub; mkdir pub; cd pub && git init && git remote add origin git@github.com:Riverside-Healthcare/Tableau-Metadata-Exporter.git && git pull origin master
    - git rm -rf . ; git clean -fxd # remove pub files, except git
    - cd $CI_PROJECT_DIR && rm -rf .git
    - cd .. && cd pub && mv $CI_PROJECT_DIR/* .
    - git status
    - git add . && git commit -m "$MESSAGE"
    - git status
    - git push -u origin master
  needs:
    - job: lint
      artifacts: false